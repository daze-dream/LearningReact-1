{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","a","fetch","response","json","monstersJSON","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAAe,I,kBCGFA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,mBAAmBC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAE/B,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCLCC,G,MAAW,SAACR,GACrB,OACA,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLfM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCHhBG,E,kDACJ,aAAc,IAAD,8BACX,gBAiBFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjBrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJJ,E,4FAYb,8BAAAI,EAAA,sEACwBC,MAAM,8CAD9B,cACMC,EADN,gBAE2BA,EAASC,OAFpC,OAEMC,EAFN,OAGEC,KAAKV,SAAS,CAACT,SAAUkB,IAH3B,gD,0EAUA,WACE,MAAiCC,KAAKN,MAA9Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAKA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAErG,OACE,sBAAK9B,UAAU,MAAf,UACE,mDACF,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAlCRI,IAAMC,WAwCTlB,IClCAmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fe304ff2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return(\r\n        <div className='card-container'>\r\n            <img alt=\"monster portrait\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            {/**the key still is part of the CardList component, because each Card now has its own KEY */}\r\n            <h2> {props.monster.name} </h2>\r\n            <p> {props.monster.email} </p>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport {Card} from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => {\r\n    return(\r\n    <div className=\"card-list\">\r\n     {props.monsters.map(monster => (\r\n         <Card key={monster.id} monster={monster}/>\r\n     ))}   \r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './searchbox.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <input \r\n            className=\"search\" \r\n            type='search' \r\n            placeholder={placeholder} \r\n            onChange={handleChange}\r\n        />\r\n    )\r\n}","import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/searchbox/searchbox.components'\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n    //this.handleChange = this.handleChange.bind(this)\n  }\n\n\n\n  async componentDidMount() {\n    let response  = await fetch('https://jsonplaceholder.typicode.com/users')\n    let monstersJSON = await response.json()\n    this.setState({monsters: monstersJSON})\n  }\n\n  handleChange =(e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const { monsters, searchField} = this.state\n    const filteredMonsters = monsters.filter(monster => (monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    )\n    return (\n      <div className=\"App\">\n        <h1> Monster Rolodex </h1>\n      <SearchBox \n        placeholder=\"search monsters\"\n        handleChange={this.handleChange}\n      />\n      <CardList monsters={filteredMonsters}/>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}